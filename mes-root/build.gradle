plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'com.palantir.docker' version "0.20.1"
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}
allprojects {
    group 'com.hengyi.japp.mes'
    version '1.0'

    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://jitpack.io' }
    }
}
subprojects {
    apply plugin: 'java'
    sourceCompatibility = 11
    targetCompatibility = 11
    apply plugin: 'application'
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'com.palantir.docker'

    dependencies {
        compile "com.github.ixtf.japp:vertx:${jappVersion}",
                "com.github.ixtf.japp:codec:${jappVersion}",
                "io.vertx:vertx-rabbitmq-client:${vertxVersion}"

        compileOnly "io.vertx:vertx-codegen:${vertxVersion}",
                "org.projectlombok:lombok:${lombokVersion}"

        testCompile "junit:junit:4.12",
                "io.vertx:vertx-unit:${vertxVersion}",
                "io.vertx:vertx-web-client:${vertxVersion}",
                "org.apache.lucene:lucene-demo:${luceneVersion}",
                "org.projectlombok:lombok:${lombokVersion}"
    }

    lombok {
        version = "${lombokVersion}"
        sha256 = ""
    }
    /**
     * 打包 docker 准备
     */
    docker {
        dependsOn build
        name "hengyi/${project.name}"
        noCache true
        files "build/libs/${project.name}-fat.jar"
    }
    shadowJar {
//        baseName "${project.name}-fat.jar"
        archiveName "${project.name}-fat.jar"
    }
    jar.manifest {
        attributes(
                'Implementation-Title': name,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility
        )
    }
//    javadoc.options {
//        encoding = 'UTF-8'
//        use = true
//        links 'https://docs.oracle.com/javase/8/docs/api/'
//    }
//    task javadocJar(type: Jar) {
//        classifier = 'javadoc'
//        from javadoc
//    }
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
//    artifacts {
//        archives javadocJar, sourcesJar
//    }
}

